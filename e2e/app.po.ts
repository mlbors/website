/**
 * Website - App e2e - Functions
 *
 * @since       2018.04.22
 * @version     1.0.0.0
 * @author		  mlbors
 * @copyright	  -
 */

/*****************************/
/********** IMPORTS **********/
/*****************************/

import { browser, by, element } from 'protractor';

/********************************************************************************/
/********************************************************************************/

/************************************/
/********** APP PAGE CLASS **********/
/************************************/

export class AppPage {

  /*********************************/
  /********** NAVIGATE TO **********/
  /*********************************/

  navigateTo() {
    return browser.get('/');
  }

  /********************************************************************************/
  /********************************************************************************/

  /************************************/
  /********** GET NAVIGATION **********/
  /************************************/

  getNavigation() {
    return element(by.css('.navbar'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /*******************************/
  /********** GET BRAND **********/
  /*******************************/

  getBrand() {
    return element(by.css('.navbar-brand'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /********************************/
  /********** GET NAVBAR **********/
  /********************************/

  getNavigationList() {
    return element(by.css('.navbar-nav'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /******************************************/
  /********** GET NAVIGATION ITEMS **********/
  /******************************************/

  getNavigationItems() {
    return element.all(by.css('.nav-item'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /******************************************/
  /********** GET NAVIGATION LINKS **********/
  /******************************************/

  getNavigationLinks() {
    return element.all(by.css('.nav-link'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /*********************************/
  /********** GET CONTENT **********/
  /*********************************/

  getContent() {
    return element(by.css('.content'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /*************************************/
  /********** GET COVER IMAGE **********/
  /*************************************/

  getPostCoverImage() {
    return element(by.css('.post-cover-image'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /*********************************/
  /********** GET EXCERPT **********/
  /*********************************/

  getExcerpt() {
    return element(by.css('.excerpt'));
  }

  /********************************************************************************/
  /********************************************************************************/

  /****************************************/
  /********** CONVERT RGB TO HEX **********/
  /****************************************/

  convertRgbToHex(color: string) {
    if (color.substr(0, 1) === '#') {
      return color;
    }
    const digits = /(.*?)rgb\((\d+), (\d+), (\d+)\)/.exec(color);
    const red = parseInt(digits[2]);
    const green = parseInt(digits[3]);
    const blue = parseInt(digits[4]);

    const rgb = blue | (green << 8) | (red << 16);
    return digits[1] + '#' + rgb.toString(16).padStart(6, '0');
  }
}
